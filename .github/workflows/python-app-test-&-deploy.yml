name: Python application
on:
  push:                                                    # Trigger = push
    branches: [ "main" ]
    paths:    [ "api/staging_model/**" ]
jobs:
  job_test_deploy:                                      # Job N° 1
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10                             # Step N° 1
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Python Dependencies                    # Step N° 2
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
    - name: Check Syntax with Lint                         # Step N° 3
      run: |
        # stops build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Request Deployment to Staging                  # Step N° 4
      run: | 
        ip_staging=`  awk -F: "/ip_host/{     print $2}" config.json | tr -d ","`  
        port_staging=`awk -F: "/port_staging/{print $2}" config.json | tr -d ","`  
        url_staging=${ip_staging}:${port_staging}
        curl -X GET ${url_staging}/deploy_to_staging/ --no-progress-meter
    - name: Install REST requests to access API            # Step N° 5
      run: |
        python -m pip install -r ./test_api/test_requirements.txt        
    - name: Run Unit Tests on Staging                      # Step N° 6
      run: |
        # pytest option rAll prints outputs of success and failure tests
        python -m pytest --import-mode=append -rA ./test_api/
    - name: Request Deployment to Production               # Step N° 7
      run: |        
        # runs only if all Unit Tests succeeded
        ip_production=`  awk -F: "/ip_host/{        print $2}" config.json | tr -d ","`  
        port_production=`awk -F: "/port_production/{print $2}" config.json | tr -d ","`  
        url_production=${ip_production}:${port_production}
        url_production = dict_config['ip_host'] + dict_config['port_production']
        curl -X GET ${url_production}/deploy_to_production/ --no-progress-meter 
